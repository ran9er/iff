(defun liny-clear-word (str &optional back)
  (let*  ((str (split-string str "[ \t\n]" t)))
    (if back (setq str (reverse str)))
    (save-excursion
      (while str
        (if back
            (skip-chars-backward " \t\n")
          (skip-chars-forward " \t\n"))
        (let* ((p1 (point))
               (p2 (if back (1+ (search-backward-regexp "[ \t\n]"))
                     (1- (search-forward-regexp "[ \t\n]"))))
               (s (buffer-substring-no-properties p1 p2)))
          (if (equal (car str) s)
              (delete-region p1 p2)))
        (setq str (cdr str))))))

(defun liny-clear-region (snippet)
  (let* ((s (liny-get-snippet snippet))
         (head (car s))
         (tail (car (last s))))
    (if (stringp head)
        (liny-clear-word head t))
    (if (stringp tail)
        (liny-clear-word tail))))

