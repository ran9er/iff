(loaddefs-eval
 '(("script.el"
    (20944 12700 595000 0)
    (autoload 'run-current-file "script" "Execute or compile the current file.\nFor example, if the current buffer is the file x.pl,\nthen it'll call “perl x.pl” in a shell.\nThe file can be php, perl, python, bash, java.\nFile suffix is used to determine what program to run.\n\n(fn)" t nil)
    (autoload 'x-shell "script" "Not documented.\n\n(fn prog)" nil nil)
    (autoload 'lua-shell "script" "make a lua shell\n\n(fn)" t nil)
    (autoload 'node\.js "script" "make a node.js shell\n\n(fn)" t nil)
    (autoload 'coffee "script" "make a coffee-script shell\n\n(fn)" t nil)
    (autoload 'run-ruby "script" "Run an inferior Ruby process" t))
   ("sudo.el"
    (20944 12700 543000 0)
    (autoload 'sudo-edit "sudo" "Not documented.\n\n(fn &optional arg)" t nil))
   ("sdcv.el"
    (20934 65447 329000 0)
    (autoload 'sdcv-to-buffer "sdcv" "Not documented.\n\n(fn)" t nil))
   ("zenburn-theme.el"
    (20929 50055 89000 0)
    (and load-file-name
         (boundp 'custom-theme-load-path)
         (add-to-list 'custom-theme-load-path
                      (file-name-as-directory
                       (file-name-directory load-file-name))))
    (add-to-list 'safe-local-eval-forms
                 '(when
                      (require 'rainbow-mode nil t)
                    (rainbow-mode 1))))
   ("skeleton-pair.el"
    (20923 55131 345000 0)
    (autoload 'skeleton-pair-alist-update "skeleton-pair" "Not documented.\n\n(fn &optional keymap)" t nil))
   ("auto-pair.el"
    (20923 55131 307000 0)
    (autoload 'my-auto-pair "auto-pair" "Not documented.\n\n(fn)" t nil))
   ("search.el"
    (20808 64911 791000 0)
    (autoload 'search-str "search" "Not documented.\n\n(fn regexp str &rest sub)" nil nil)
    (autoload 'split-str "search" "Not documented.\n\n(fn sep str)" nil nil))
   ("logic.el"
    (20771 27383 105000)
    (autoload 'xor "logic" "like find-if\n\n(fn fn &rest lst)" nil t)
    (autoload 'xand "logic" "Not documented.\n\n(fn fn &rest lst)" nil t))
   ("mask.el"
    (20771 27383 87000)
    (autoload 'mask-gen-num "mask" "Not documented.\n\n(fn &rest lst)" nil nil)
    (autoload 'mask-check "mask" "Not documented.\n\n(fn idx n)" nil nil)
    (autoload 'mask-gen-lst "mask" "Not documented.\n\n(fn n)" nil nil)
    (autoload 'mask-count-t "mask" "Not documented.\n\n(fn n)" nil nil))
   ("arith.el"
    (20767 46615 336000)
    (autoload 'average "arith" "Not documented.\n\n(fn &rest lst)" nil nil))
   ("beacon.el"
    (20767 46615 305000)
    (autoload 'swap-point "beacon" "Not documented.\n\n(fn)" t nil)
    (autoload 'beacon "beacon" "Not documented.\n\n(fn)" t nil))
   ("bind-keys.el"
    (20767 46615 291000)
    (autoload 'bind-keys "bind-keys" "bind some key like \"C-m\" \"C-i\" \"C-[\"\n\n(fn map &rest kd)" nil nil)
    (autoload 'def-keys-low "bind-keys" "bind some key like \"C-m\" \"C-i\" \"C-[\"\n\n(fn map &rest kd)" nil nil))
   ("buffer.el"
    (20767 46615 276000)
    (autoload 'substring-buffer-name "buffer" "使用 substring 截取文件名时，在 buffer-name 后面加几个字符，防止文件名过短引发错误。m n 参数同`substring'的 from to，可选参数 x 存在时截取带路径的文件名。\n\n(fn m n &optional x)" nil nil)
    (autoload 'my-clean-buffer "buffer" "Kill buffers as per `my-clean-buffer-list' and `my-clean-buffer-modes'.\n\n(fn)" t nil))
   ("column.el"
    (20767 46615 255000)
    (autoload 'copy-word-on-column "column" "Not documented.\n\n(fn &optional n)" t nil)
    (autoload 'copy-sexp-on-column "column" "Not documented.\n\n(fn &optional n)" t nil)
    (autoload 'calc-column "column" "Not documented.\n\n(fn fn)" t nil))
   ("dired.el"
    (20767 46615 224000)
    (autoload 'rename-file-specify-extension "dired" "Not documented.\n\n(fn &optional suf)" t nil))
   ("dos2unix.el"
    (20767 46615 210000)
    (autoload 'dos2unix "dos2unix" "Convert a DOS formatted text buffer to UNIX format\n\n(fn)" t nil)
    (autoload 'unix2dos "dos2unix" "Convert a UNIX formatted text buffer to DOS format\n\n(fn)" t nil)
    (autoload 'del^M "dos2unix" "Not documented.\n\n(fn)" t nil))
   ("edit-ad.el"
    (20767 46615 196000)
    (autoload 'parallel-edit "edit-ad" "Not documented.\n\n(fn position-list &optional prt)" t nil))
   ("edit-lisp.el"
    (20767 46615 173000)
    (autoload 'outside "edit-lisp" "up list N level, append PRE ahead and SUF behind, backward M char\n\n(fn o b s &optional n)" t nil)
    (autoload 'outside-kill "edit-lisp" "up list N level, append PRE ahead and SUF behind, backward M char\n\n(fn &optional n)" t nil))
   ("edit.el"
    (20767 46615 145000)
    (autoload 'resize-horizontal-space "edit" "Not documented.\n\n(fn &optional backward-only)" t nil)
    (autoload 'smart-backward-kill "edit" "Not documented.\n\n(fn)" t nil)
    (autoload 'string-expand "edit" "Not documented.\n\n(fn s)" t nil))
   ("file.el"
    (20767 46615 132000)
    (autoload 'read-lines "file" "Return a list of lines in FILEPATH.\n\n(fn filePath)" nil nil)
    (autoload 'find-temp "file" "Not documented.\n\n(fn &optional suffix)" t nil)
    (autoload 'write-temp "file" "Not documented.\n\n(fn filename &optional confirm)" t nil))
   ("font.el"
    (20767 46615 101000)
    (autoload 'usage-font "font" "Not documented.\n\n(fn &rest fonts)" nil nil)
    (autoload 'set-my-font0 "font" "Not documented.\n\n(fn &rest lst)" nil nil)
    (autoload 'set-font "font" "Not documented.\n\n(fn script font &optional size)" nil nil)
    (autoload 'set-my-font "font" "Not documented.\n\n(fn base-fonts base-font-size &optional ext-fonts ext-font-size)" nil nil)
    (autoload 'set-my-bf-mode "font" "set buffer face mode\n\n(fn font size)" nil nil)
    (autoload 'set-my-ui-font "font" "set mode-line & header-line\n\n(fn height font)" nil nil)
    (autoload 'my-buffer-face-mode "font" "Not documented.\n\n(fn &optional ls)" nil nil)
    (autoload 'custom-buffer-face-mode "font" "Not documented.\n\n(fn)" t nil))
   ("function.el"
    (20767 46615 86000)
    (autoload 'temp-func-add "function" "Not documented.\n\n(fn &optional beg end)" t nil)
    (autoload 'temp-func-call "function" "Not documented.\n\n(fn &optional n)" t nil)
    (autoload 'set-local-variable "function" "Not documented.\n\n(fn &optional v)" t nil))
   ("hash.el"
    (20767 46615 71000)
    (autoload 'cons2hash "hash" "Not documented.\n\n(fn lst)" nil nil)
    (autoload 'build-hash-table "hash" "Not documented.\n\n(fn &rest lst)" nil nil)
    (autoload 'list-hash "hash" "Not documented.\n\n(fn hash-table &optional with-value)" nil nil))
   ("indent-hint.el"
    (20767 46615 57000)
    (autoload 'indent-hint-lisp "indent-hint" "Not documented.\n\n(fn)" t nil)
    (autoload 'indent-hint-fixed "indent-hint" "Not documented.\n\n(fn &optional img)" t nil)
    (autoload 'indent-hint-js "indent-hint" "Not documented.\n\n(fn)" t nil)
    (autoload 'indent-hint-test "indent-hint" "Not documented.\n\n(fn &optional regexp)" t nil))
   ("insert.el"
    (20767 46613 979000)
    (autoload 'comment-block "insert" "Not documented.\n\n(fn &optional beg end)" t nil)
    (autoload 'insert-autoload-magic-comment "insert" "Not documented.\n\n(fn)" t nil)
    (autoload 'insert-time "insert" "Not documented.\n\n(fn &optional time format)" t nil)
    (autoload 'insert-delimit-line "insert" "Not documented.\n\n(fn &optional n time)" t nil)
    (autoload 'insert-doc-head "insert" "Not documented.\n\n(fn)" t nil))
   ("list.el"
    (20767 46613 948000)
    (autoload 'to-alist-l "list" "(to-alist-l '(1 2 3 4 5 6)) => ((1 . 2) (3 . 4) (5 . 6))\n\n(fn &rest lst)" nil nil)
    (autoload 'mkal "list" "(mkal 1 2 3 4 5 6) => ((1 . 2) (3 . 4) (5 . 6))\n\n(fn &rest rest)" nil t)
    (autoload 'zip-lists "list" "(zip-lists '(1 3 5) '(2 4 6)) => ((1 . 2) (3 . 4) (5 . 6))\n\n(fn f a &optional b)" nil nil)
    (autoload 'merge-lists "list" "(merge-lists '(1 2) '(3 4) '(5 6)) => ((1 3 5) (2 4 6))\n\n(fn &rest lists)" nil nil)
    (autoload 'add-to-list-p "list" "See also `add-to-list-x'\n\n(fn LIST-VAR &optional BASE &rest REST)" nil nil))
   ("load.el"
    (20767 46613 921000)
    (autoload 'load-once "load" "Not documented.\n\n(fn &rest s)" nil t)
    (autoload 'load1 "load" "Not documented.\n\n(fn file)" nil nil))
   ("loop.el"
    (20767 46613 863000)
    (autoload 'elf "loop" "&optional verb pred &rest form\n\n\n(fn &rest form)" nil t))
   ("parse.el"
    (20767 46613 839000)
    (autoload 'wordpress "parse" "Not documented.\n\n(fn beg end)" t nil))
   ("string.el"
    (20767 46613 725000)
    (autoload 'join-string "string" "(mapconcat 'identity lst s)\n\n(fn lst s)" nil nil)
    (autoload 'shell-command-symbol-to-string "string" "Not documented.\n\n(fn &rest s)" nil t)
    (defalias 'ss 'shell-command-symbol-to-string))
   ("test.el"
    (20767 46613 711000)
    (autoload 'mklst "test" "创建大小为 n 的字符串列表\n\n(fn n)" nil nil)
    (autoload 'eval-buffer-time "test" "\n\n(fn)" t nil)
    (autoload 'test-list "test" "用大小为 n 的字符串列表，测试函数 fn (fn 最后一个参数为列表)\n\n(fn n &rest fn)" nil t)
    (autoload 'test-times "test" "计算 body 运行 n 次所需时间\n\n(fn n &rest body)" nil t))))
